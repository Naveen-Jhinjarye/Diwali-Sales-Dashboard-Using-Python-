# -*- coding: utf-8 -*-
"""Project6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1agROwOGEM1mU8xH00tsIdpvePf5ImR_L
"""

from google.colab import files

# Upload the file
print("Please upload your Excel file:")
uploaded = files.upload()

# Automatically handle the uploaded file (no need to input file name manually)
print("\nUploaded file(s) have been successfully uploaded!")

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

diwali = pd.read_csv('Diwali Sales Data.csv', encoding='unicode_escape')

diwali.head()

diwali.shape

missing_values = diwali.isnull().sum()
print('Missing Values')
missing_values

diwali.drop(['Status', 'unnamed1'], axis =  1, inplace = True)

diwali.head()

diwali.dropna(inplace = True)

diwali.info()

missing_values = diwali.isnull().sum()
print('Missing Values')
missing_values

diwali.dtypes

diwali['Amount'] = diwali['Amount'].astype('int')

diwali.dtypes

diwali.head()

round(diwali[['Age','Orders', 'Amount']].describe(), 2)

Counts = diwali['Gender'].value_counts()
Counts

Perc_counts = round(Counts/len(diwali) * 100, 2)
Perc_counts

plt.figure(figsize=(8, 4))
Perc_counts.plot(kind ='pie', autopct = '%1.2f%%')
plt.title('Gender Distribution')
plt.ylabel('')
plt.legend()
plt.show()

grouped_var = diwali.groupby('Gender')['Amount'].sum().sort_values(ascending = False)
grouped_var

import matplotlib.pyplot as plt
import seaborn as sns

# Group data
grouped_var = diwali.groupby('Gender')['Amount'].sum().sort_values(ascending=False)

# Set color palette
colors = ['#FF9999', '#66B3FF']

# Plot bar chart
plt.figure(figsize=(8,5))
ax = sns.barplot(x='Gender', y='Amount', data=diwali, estimator=sum, hue='Gender', palette=colors, legend=False)

# Add values on top of bars
for i, value in enumerate(grouped_var.values):
    plt.text(i, value + 500, f'{value:.0f}', ha='center', fontsize=12, fontweight='bold')

# Labels and title
plt.title('Total Purchase Amount by Gender', fontsize=14, fontweight='bold')
plt.xlabel('Gender', fontsize=12)
plt.ylabel('Total Amount Spent', fontsize=12)

# Show plot
plt.show()

grouped_age = diwali.groupby(['Gender', 'Age Group']).size().unstack().fillna(0)
grouped_age

plt.figure(figsize=(8,5))
sns.countplot(x='Age Group', hue='Gender', data=diwali)

plt.title('Age Group Distribution by Gender')
plt.xlabel('Age Group')
plt.ylabel('Count')  # Rotate labels for better readability
plt.show()

age_analysis = diwali.groupby('Age Group')['Amount'].sum().sort_values(ascending=False)
age_analysis



# Plotting
plt.figure(figsize=(12,6))
sns.barplot(x='Age Group', y='Amount', data= age_spending)

plt.title('Total Amount Spent by Age Group')  # Title fixed
plt.xlabel('Age Group')  # Label fixed
plt.ylabel('Total Amount Spent')

plt.show()

state_analysis = diwali.groupby('State')['Orders'].sum().sort_values(ascending=False)
state_analysis

top_states = state_analysis.nlargest(5)
plt.figure(figsize=(12,6))
sns.barplot(x=top_states.index, y=top_states.values, hue= top_states.index, palette='viridis', legend=False)

plt.title('Top 5 States by Orders')
plt.xlabel('State')
plt.ylabel('Total Orders')

plt.xticks(rotation=45, ha='right')  # Rotate to prevent overlap
plt.show()

state_analysis_2 = diwali.groupby('State')['Amount'].sum().sort_values(ascending=False)
state_analysis_2

top_states = state_analysis_2.nlargest(5)
plt.figure(figsize=(12,6))
sns.barplot(x=top_states.index, y=top_states.values, hue = top_states.index)

plt.title('Top 5 State By Amount')
plt.xlabel('State')
plt.ylabel('Total Amount')

plt.xticks(rotation=45, ha='right')  # Rotate to prevent overlap
plt.show()

Status = diwali['Marital_Status'].value_counts()
 Status

plt.figure(figsize=(8,6))
sns.barplot(x=Status.index, y=Status.values, hue = Status.index)

plt.title('Count Of Marital Status')
plt.xlabel('Marital Status')
plt.ylabel('Total Count')

plt.show()

grouped_data = diwali.groupby(['Gender', 'Marital_Status'])['Amount'].sum().unstack().fillna(0)
grouped_data

# Plot bar chart
plt.figure(figsize=(10,6))
grouped_data.plot(kind='bar', stacked=False, colormap='coolwarm', figsize=(10,6))

plt.title('Total Amount Spent by Marital Status and Gender')
plt.xlabel('Gender')
plt.ylabel('Total Amount Spent')

plt.xticks(rotation=0)  # Keep Gender labels straight
plt.legend(title='Marital Status')

plt.show()

Occupation = diwali['Occupation'].value_counts()
Occupation

plt.figure(figsize=(8,6))
sns.barplot(x = Occupation.index, y = Occupation.values, hue = Occupation.index)

plt.title('Count Of Occupation')
plt.xlabel('Occupation')
plt.ylabel('Total Count')
plt.xticks(rotation=45, ha='right')
plt.show()

Occupation_analysis = diwali.groupby('Occupation')['Amount'].sum().sort_values(ascending=False)
Occupation_analysis

plt.figure(figsize = (10,6))
sns.barplot(x = Occupation_analysis.index, y = Occupation_analysis.values, hue = Occupation_analysis.index)
plt.title('Total Amount Spent By Occupation')
plt.xlabel('Occupation')
plt.ylabel('Total Amount Spent')
plt.xticks(rotation = 45, ha = 'right')
plt.show()

product_analysis = diwali['Product_Category'].value_counts()
product_analysis

plt.figure(figsize = (10,6))
sns.barplot(x = product_analysis.index, y = product_analysis.values, hue = product_analysis.index)
plt.title('Count Of Product Category')
plt.xlabel('Product Category')
plt.ylabel('Total Count')
plt.xticks(rotation = 45, ha = 'right')
plt.show()

product_analysis_2 = diwali.groupby('Product_Category')['Amount'].sum().sort_values(ascending=False)
product_analysis_2

plt.figure(figsize =(10,6))
sns.barplot(x= product_analysis_2.index, y= product_analysis_2.values, hue = product_analysis_2.index)
plt.title('Total Amount Spent By Product Category')
plt.xlabel('Product Category')
plt.ylabel('Total Amount Spent')
plt.xticks(rotation = 45, ha = 'right')
plt.show()

product_analysis_3 = diwali.groupby('Product_ID')['Orders'].sum().sort_values(ascending=False).head(10)
product_analysis_3

plt.figure(figsize =(10,6))
sns.barplot(x= product_analysis_3.index, y= product_analysis_3.values, hue = product_analysis_3.index)
plt.title('Top 10 Product ID By Orders')
plt.xlabel('Product ID')
plt.ylabel('Total Orders')
plt.xticks(rotation = 45, ha = 'right')
plt.show()